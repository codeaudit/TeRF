signature ./2 unfoldl/0 nil/0 cons/0 unfold/0 p_ f_ g_ seed_;
unfoldl p_ f_ g_ p_ = nil;
unfoldl p_ f_ g_ seed_ = cons (f_ seed_) (unfoldl p_ f_ g_ (g_ seed_));

# unfold takes in an initial item, 'seed', and initiates/appends the result of 'f_ seed_' to the 'unfold' list. The next 'seed' value in unfold's recursive call is the result of 'g_ seed_'. The list is completely unfolded once 'g_ seed_' == 'p_'.