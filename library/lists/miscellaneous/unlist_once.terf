signature ./2 unlist_once/0 nil/0 cons/0 x_ y_ z_ concat/0 4/0 5/0 6/0 10/0 a_ b_ 9/0 8/0 7/0;
assume 'library/lists/miscellaneous/concat';
unlist_once nil = nil;
unlist_once (cons (cons x_ y_) z_) = concat (cons x_ y_) (unlist_once z_);
unlist_once (cons x_ y_) = cons x_ (unlist_once y_);

# unlist_once takes in a list and returns a list with each item unlisted once. If the item is already in leaf representation, it stays as is.

# Example
# unlist_once (cons 4 (cons (cons (cons 5 nil) nil) nil)) = cons 4 (cons (cons 5 nil) nil)

