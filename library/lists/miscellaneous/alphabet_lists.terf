signature nil/0 y/0 x/0 w/0 v/0 ./2 u/0 t/0 s/0 r/0 q/0 p/0 o/0 m/0 n/0 l/0 list1/0 k/0 j/0 i/0 h/0 g/0 f/0 e/0 d/0 c/0 b/0 a/0 alphabet_list/0 cons/0 list/0 z/0 x_ y_ a_ 1/0 2/0 3/0 4/0 5/0 6/0 7/0 8/0 9/0 10/0 11/0 12/0 13/0 14/0 15/0 16/0 17/0 18/0 19/0 20/0 21/0 22/0 23/0 24/0 25/0 26/0 alphabet_list_number/0 take_from/0 decide/0 0/0 f_ letter_list/0; 
assume 'library/lists/constructors/list_items';
assume 'library/lists/Iteration/map';
alphabet_list = list (a b c d e f g h i j k l m n o p q r s t u v w x y z);
alphabet_list_number = alphabet_list (list (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26));

take_from nil = nil;
take_from (cons x_ y_) = map decide (cons x_ y_);
decide x_ = x_ | 0;
letter_list = take_from alphabet_list;

# alphabet_list generates a list of 26 items, with each item corresponding the next letter in the alphabet.

# alphabet_list_numbers generates two lists, the first being 'alphabet_list', and the second being a list of numbers from 1-26, with each number corresponding to a respective letter - 1:a, 2:b ... 26:z

# letter_list