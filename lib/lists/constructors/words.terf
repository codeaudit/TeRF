signature list/0 split/0 b_ z_ nil/0 a_ y_ xs_ cons/0 x_ ./2 until/0;
assume 'library/lists/constructors/list_items';
split x_ nil = nil;
until x_ (cons x_ y_) a_ = cons (list a_) (until x_ y_ nil);
until x_ (cons y_ z_) nil = until x_ z_ y_;
until x_ (cons y_ z_) a_ = until x_ z_ (a_ y_);
until x_ nil a_ = cons (list a_) nil;
split x_ xs_ = until x_ xs_ nil;

# words splits a list into a list of lists, with each inner list representing a word (See 'library/lists/words_in_lists' for word definition) The function call is 'split x_ xs_', in which 'x_' represents the item in the list separating the words ('0'), and 'xs_' represents the initial list.

# Examples
# split 0 (cons 4 (cons 5 (cons 0 (cons 6 nil)))) = cons (cons 4 (cons 5 nil)) (cons (cons 6 nil) nil)
# split 0 (cons 4 nil) = cons (cons 4 nil) nil
