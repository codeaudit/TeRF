# split f_ xs_ takes a function, f_, and a list, xs_, and returns a list of
# length 3 whose first element is a list of all the elements from the head of
# the list, until f_ x_ is true for some list element x_. The second element is
# x_, and the third is the list of all the elements following x_.
#
# Examples:
# split (eq 0) (list 4 0 5 6) =
#   (cons (cons 4 nil) (cons (cons 0 nil) (cons 5 (cons 6 nil))))
# split (eq a) (list a b a b) =
#   (cons nil (cons (cons a nil) (cons b (cons a (cons b nil)))))

assume 'booleans/if';
assume 'lists/constructors/enhead';

split f_ nil = cons nil nil;
split f_ (cons x_ y_) = if (f_ x_)
                           (cons nil (cons x_ y_))
                           (enhead x_ (split f_ y_));
