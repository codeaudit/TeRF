# DESCRIPTION:
chit: count the number of times the head of the list appears in the tail
head: give the first item in the list
tail: give the list with the first item removed
count: takes two arguments, item and list, and counts how often item appears in
    list

# RULES:

head nil = nil
head (cons x_ y_) = x_

tail nil = nil
tail (cons x_ y_) = y_

count x_ nil = 0
count x_ (cons x_ y_) = succ (count x_ y_)
count x_ (cons y_ z_) = count x_ z_

chit nil = 0
chit (cons x_ y_) = count x_ y_

# SIGNATURE:
./2 head/0 nil/0 cons/0 tail/0 count/0 chit/0 succ/0 x_ y_ z_

# ASSUMED CONCEPTS:
succ: adds one to a number

# EXAMPLES
# note: not writing lists as conses, because boring.
chit [8 7 3 4 9 7 6] = 0
chit [5 5 5] = 2
chit [1 5 1 3 8 1] = 2
chit [] = 0
chit [1 8 1 3 4] = 1

# PYTHON IMPLEMENTATION
def head(xs):
    return xs[0]

def tail(xs):
    return xs[1:]

def count(x, xs):
    return xs.count(x)

def chit(xs):
    return count(head(xs), tail(xs))
